<!DOCTYPE html>
<html>
  <head>
    <title>ArunaSolar - Solar Management Portal</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    
    <!-- Quasar CSS -->
    <link href="https://cdn.jsdelivr.net/npm/quasar@2.14.2/dist/quasar.min.css" rel="stylesheet">
    
    <!-- Custom Styles -->
    <style>
      * {
        box-sizing: border-box;
      }
      
      body {
        margin: 0;
        padding: 0;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        background: #f5f5f5;
        color: #333;
        line-height: 1.6;
      }
      
      /* Custom scrollbar */
      ::-webkit-scrollbar {
        width: 8px;
      }
      
      ::-webkit-scrollbar-track {
        background: #f1f1f1;
      }
      
      ::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 4px;
      }
      
      ::-webkit-scrollbar-thumb:hover {
        background: #a8a8a8;
      }
      
      /* Login/Auth pages specific styles */
      .auth-page {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      
      .auth-page .q-card {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      /* Dashboard specific styles */
      .dashboard-page {
        background: #f8fafc;
        min-height: 100vh;
      }
      
      .dashboard-page .q-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
      }
      
      /* Form styles */
      .q-field--filled .q-field__control {
        background: rgba(255, 255, 255, 0.9);
      }
      
      .q-field--filled.q-field--focused .q-field__control {
        background: rgba(255, 255, 255, 1);
      }
      
      /* Button styles */
      .q-btn {
        font-weight: 500;
        text-transform: none;
        letter-spacing: 0.025em;
      }
      
      .q-btn--push {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      
      .q-btn--push:active {
        transform: translateY(1px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      
      /* Card styles */
      .q-card {
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.05);
      }
      
      .q-card--bordered {
        border: 1px solid #e2e8f0;
      }
      
      /* Notification styles */
      .q-notification {
        border-radius: 12px;
        backdrop-filter: blur(10px);
      }
      
      /* Error message styles */
      .error-message {
        color: #dc2626;
        font-size: 12px;
        margin-top: 4px;
        display: flex;
        align-items: center;
        gap: 4px;
      }
      
      .success-message {
        color: #059669;
        font-size: 12px;
        margin-top: 4px;
        display: flex;
        align-items: center;
        gap: 4px;
      }
      
      /* Loading overlay */
      .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        backdrop-filter: blur(4px);
      }
      
      /* Responsive utilities */
      @media (max-width: 600px) {
        .auth-page .q-card {
          margin: 16px;
          max-width: calc(100% - 32px);
        }
        
        .q-pa-xl {
          padding: 24px !important;
        }
      }
      
      /* Animation utilities */
      .fade-in {
        animation: fadeIn 0.3s ease-in;
      }
      
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      .slide-up {
        animation: slideUp 0.3s ease-out;
      }
      
      @keyframes slideUp {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      /* Custom Quasar overrides */
      .q-field--outlined .q-field__control {
        border-radius: 12px;
      }
      
      .q-field--filled .q-field__control {
        border-radius: 12px 12px 0 0;
      }
      
      .q-btn--rounded {
        border-radius: 12px;
      }
      
      /* Print styles */
      @media print {
        .no-print, .q-header, .q-footer {
          display: none !important;
        }
      }
    </style>
    
    <!-- Using external CDNs only - no Rails asset pipeline -->
  </head>

  <body class="<%= body_class %>">
    <!-- Loading overlay for global use -->
    <div id="global-loading" class="loading-overlay" style="display: none;">
      <div class="text-center">
        <div class="q-spinner-hourglass" style="font-size: 2rem; color: #667eea;"></div>
        <div style="margin-top: 16px; color: #667eea; font-weight: 500;">Loading...</div>
      </div>
    </div>
    
    <!-- Flash messages container -->
    <div id="flash-messages">
      <% if notice %>
        <div class="q-notification q-notification--positive" style="position: fixed; top: 16px; right: 16px; z-index: 9000;">
          <div class="q-notification__wrapper">
            <div class="q-notification__content">
              <i class="material-icons q-notification__icon">check_circle</i>
              <div class="q-notification__message"><%= notice %></div>
            </div>
          </div>
        </div>
      <% end %>
      
      <% if alert %>
        <div class="q-notification q-notification--negative" style="position: fixed; top: 16px; right: 16px; z-index: 9000;">
          <div class="q-notification__wrapper">
            <div class="q-notification__content">
              <i class="material-icons q-notification__icon">error</i>
              <div class="q-notification__message"><%= alert %></div>
            </div>
          </div>
        </div>
      <% end %>
    </div>
    
    <!-- Main content -->
    <main id="main-content">
      <%= yield %>
    </main>
    
    <!-- Vue.js and Quasar -->
    <script src="https://cdn.jsdelivr.net/npm/vue@3.3.4/dist/vue.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quasar@2.14.2/dist/quasar.umd.min.js"></script>
    
    <!-- Global JavaScript utilities -->
    <script>
      // Global utilities
      window.ArunaSolar = {
        // Show global loading
        showLoading: function() {
          document.getElementById('global-loading').style.display = 'flex';
        },
        
        // Hide global loading
        hideLoading: function() {
          document.getElementById('global-loading').style.display = 'none';
        },
        
        // Show notification
        showNotification: function(message, type = 'positive', timeout = 3000) {
          if (window.Vue && window.Quasar) {
            // Use Quasar notify if available
            const app = window.Vue.getCurrentInstance();
            if (app && app.appContext.config.globalProperties.$q) {
              app.appContext.config.globalProperties.$q.notify({
                message: message,
                type: type,
                timeout: timeout,
                position: 'top-right'
              });
            }
          }
        },
        
        // Handle API errors
        handleApiError: function(error, defaultMessage = 'An error occurred') {
          let message = defaultMessage;
          if (error.response && error.response.data && error.response.data.error) {
            message = error.response.data.error;
          } else if (error.message) {
            message = error.message;
          }
          this.showNotification(message, 'negative');
        },
        
        // Format mobile number
        formatMobileNumber: function(number) {
          if (!number) return '';
          const cleaned = number.toString().replace(/\D/g, '');
          if (cleaned.length === 10) {
            return cleaned.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
          }
          return cleaned;
        },
        
        // Validate mobile number
        validateMobileNumber: function(number) {
          const cleaned = number.toString().replace(/\D/g, '');
          return /^\d{10}$/.test(cleaned);
        },
        
        // Get CSRF token
        getCSRFToken: function() {
          const metaTag = document.querySelector('meta[name="csrf-token"]');
          return metaTag ? metaTag.getAttribute('content') : '';
        },
        
        // Make authenticated API request
        apiRequest: async function(url, options = {}) {
          const defaultOptions = {
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': this.getCSRFToken()
            }
          };
          
          const mergedOptions = {
            ...defaultOptions,
            ...options,
            headers: {
              ...defaultOptions.headers,
              ...options.headers
            }
          };
          
          try {
            const response = await fetch(url, mergedOptions);
            const data = await response.json();
            
            if (!response.ok) {
              throw new Error(data.error || `HTTP error! status: ${response.status}`);
            }
            
            return { data, response };
          } catch (error) {
            console.error('API Request failed:', error);
            throw error;
          }
        }
      };
      
      // Auto-hide flash messages
      document.addEventListener('DOMContentLoaded', function() {
        setTimeout(function() {
          const flashMessages = document.getElementById('flash-messages');
          if (flashMessages) {
            flashMessages.style.opacity = '0';
            flashMessages.style.transition = 'opacity 0.5s ease-out';
            setTimeout(function() {
              flashMessages.innerHTML = '';
              flashMessages.style.opacity = '1';
            }, 500);
          }
        }, 5000);
      });
      
      // Handle global errors
      window.addEventListener('error', function(event) {
        console.error('Global error:', event.error);
      });
      
      window.addEventListener('unhandledrejection', function(event) {
        console.error('Unhandled promise rejection:', event.reason);
      });
    </script>
    
    <!-- Page-specific JavaScript -->
    <%= yield :javascript if content_for?(:javascript) %>
  </body>
</html>